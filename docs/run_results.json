{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.5", "generated_at": "2024-08-19T03:36:22.424066Z", "invocation_id": "8f36c9f0-1b6d-45a0-87ad-85743d0d8c74", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:21.665956Z", "completed_at": "2024-08-19T03:36:21.678017Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:21.678689Z", "completed_at": "2024-08-19T03:36:21.678709Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014050006866455078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.ml_inline_preprocessing_integration_tests.data_categorical_impute", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:21.681597Z", "completed_at": "2024-08-19T03:36:21.683260Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:21.684274Z", "completed_at": "2024-08-19T03:36:21.684288Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004151105880737305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.ml_inline_preprocessing_integration_tests.data_interact", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:21.687068Z", "completed_at": "2024-08-19T03:36:21.688644Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:21.689344Z", "completed_at": "2024-08-19T03:36:21.689354Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0034449100494384766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.ml_inline_preprocessing_integration_tests.data_k_bins_discretize", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:21.695285Z", "completed_at": "2024-08-19T03:36:21.697425Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:21.698554Z", "completed_at": "2024-08-19T03:36:21.698568Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0068511962890625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.ml_inline_preprocessing_integration_tests.data_label_encode", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:21.701509Z", "completed_at": "2024-08-19T03:36:21.703286Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:21.704042Z", "completed_at": "2024-08-19T03:36:21.704053Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0038042068481445312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.ml_inline_preprocessing_integration_tests.data_log_transform", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:21.706611Z", "completed_at": "2024-08-19T03:36:21.708336Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:21.709364Z", "completed_at": "2024-08-19T03:36:21.709376Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.003934144973754883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.ml_inline_preprocessing_integration_tests.data_max_absolute_scale", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:21.712137Z", "completed_at": "2024-08-19T03:36:21.714000Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:21.714818Z", "completed_at": "2024-08-19T03:36:21.714829Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004080057144165039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.ml_inline_preprocessing_integration_tests.data_min_max_scale", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:21.717647Z", "completed_at": "2024-08-19T03:36:21.720741Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:21.721368Z", "completed_at": "2024-08-19T03:36:21.721379Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004876136779785156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.ml_inline_preprocessing_integration_tests.data_numerical_binarize", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:21.724109Z", "completed_at": "2024-08-19T03:36:21.726388Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:21.727373Z", "completed_at": "2024-08-19T03:36:21.727408Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004575014114379883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.ml_inline_preprocessing_integration_tests.data_numerical_impute", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:21.730685Z", "completed_at": "2024-08-19T03:36:21.732681Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:21.733254Z", "completed_at": "2024-08-19T03:36:21.733265Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.003762960433959961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.ml_inline_preprocessing_integration_tests.data_one_hot_encode", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:21.735996Z", "completed_at": "2024-08-19T03:36:21.737660Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:21.738145Z", "completed_at": "2024-08-19T03:36:21.738154Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0033218860626220703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.ml_inline_preprocessing_integration_tests.data_random_impute_cat", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:21.741158Z", "completed_at": "2024-08-19T03:36:21.742921Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:21.743440Z", "completed_at": "2024-08-19T03:36:21.743450Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0035810470581054688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.ml_inline_preprocessing_integration_tests.data_random_impute_num", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:21.746181Z", "completed_at": "2024-08-19T03:36:21.747878Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:21.748347Z", "completed_at": "2024-08-19T03:36:21.748357Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0032999515533447266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.ml_inline_preprocessing_integration_tests.data_rare_category_encode", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:21.750926Z", "completed_at": "2024-08-19T03:36:21.752506Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:21.752955Z", "completed_at": "2024-08-19T03:36:21.752964Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0032660961151123047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.ml_inline_preprocessing_integration_tests.data_robust_scale", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:21.755372Z", "completed_at": "2024-08-19T03:36:21.757363Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:21.758101Z", "completed_at": "2024-08-19T03:36:21.758122Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.003875732421875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.ml_inline_preprocessing_integration_tests.data_standardize", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:21.760773Z", "completed_at": "2024-08-19T03:36:21.793732Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:21.794589Z", "completed_at": "2024-08-19T03:36:21.794604Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03561592102050781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ml_inline_preprocessing_integration_tests.test_categorical_impute", "compiled": true, "compiled_code": "with data_categorical_impute as (\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_raw_data\".\"data_categorical_impute\"\n)\n\nselect\n    \n\n    \n\n    \n\n    \n\n    \n        coalesce(input, 'cat')\n    \n\n as actual,\n    output as expected\nfrom data_categorical_impute", "relation_name": "\"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_categorical_impute\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:21.798292Z", "completed_at": "2024-08-19T03:36:21.810282Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:21.811104Z", "completed_at": "2024-08-19T03:36:21.811116Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014200925827026367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ml_inline_preprocessing_integration_tests.test_interact", "compiled": true, "compiled_code": "with data_interact as (\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_raw_data\".\"data_interact\"\n)\n\nselect\n    \n\n    \n        (input_one * input_two)\n    \n\n as actual_mult,\n    \n\n    \n        (input_one + input_two)\n    \n\n as actual_add,\n    \n\n    \n        POW(input_one, input_two)\n    \n\n as actual_exp,\n    output_mult as expected_mult,\n    output_add as expected_add,\n    output_exp as expected_exp\nfrom data_interact", "relation_name": "\"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_interact\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:21.813906Z", "completed_at": "2024-08-19T03:36:21.828487Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:21.829271Z", "completed_at": "2024-08-19T03:36:21.829289Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.016614913940429688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ml_inline_preprocessing_integration_tests.test_k_bins_discretize", "compiled": true, "compiled_code": "with data_k_bins_discretize as (\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_raw_data\".\"data_k_bins_discretize\"\n)\n\nselect\n    \n\n    \n        NTILE(5) over (order by input)\n    \n\n as actual_quantile,\n    \n\n    \n        \n        floor(\n        (\n            input - (min(input) over ())\n        )\n        /\n        (\n            ((max(input) over ()) - (min(input) over ())) / 4::float\n        )\n        ) + 1\n    \n\n as actual_uniform,\n    output_quantile as expected_quantile,\n    output_uniform as expected_uniform\nfrom data_k_bins_discretize", "relation_name": "\"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_k_bins_discretize\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:21.832441Z", "completed_at": "2024-08-19T03:36:21.840618Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:21.841409Z", "completed_at": "2024-08-19T03:36:21.841422Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010296106338500977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ml_inline_preprocessing_integration_tests.test_label_encode", "compiled": true, "compiled_code": "with data_label_encode as (\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_raw_data\".\"data_label_encode\"\n)\n\nselect\n    input,\n    \n\n    dense_rank() over (order by input) - 1\n\n as actual,\n    output as expected\nfrom data_label_encode", "relation_name": "\"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_label_encode\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:21.844124Z", "completed_at": "2024-08-19T03:36:21.852832Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:21.853671Z", "completed_at": "2024-08-19T03:36:21.853684Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01081085205078125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ml_inline_preprocessing_integration_tests.test_log_transform", "compiled": true, "compiled_code": "with data_log_transform as (\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_raw_data\".\"data_log_transform\"\n)\n\nselect\n    \n\n    case\n        when input is null or input + 0 <= 0 then null\n        else log(10, input + 0)\n    end\n\n as actual,\n    output as expected\nfrom data_log_transform", "relation_name": "\"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_log_transform\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:21.856377Z", "completed_at": "2024-08-19T03:36:21.863933Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:21.864521Z", "completed_at": "2024-08-19T03:36:21.864533Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00934910774230957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ml_inline_preprocessing_integration_tests.test_max_absolute_scale", "compiled": true, "compiled_code": "with data_max_absolute_scale as (\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_raw_data\".\"data_max_absolute_scale\"\n)\n\nselect\n    \n\n    (input) / (max(abs(input)) over ())::FLOAT\n\n as actual,\n    output as expected\nfrom data_max_absolute_scale", "relation_name": "\"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_max_absolute_scale\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:21.867486Z", "completed_at": "2024-08-19T03:36:21.875730Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:21.876344Z", "completed_at": "2024-08-19T03:36:21.876355Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010232210159301758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ml_inline_preprocessing_integration_tests.test_min_max_scale", "compiled": true, "compiled_code": "with data_min_max_scale as (\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_raw_data\".\"data_min_max_scale\"\n)\n\nselect\n    \n\n    \n    (\n        ((input) - (min(input) over ()))\n        /\n        ((max(input) over ()) - (min(input) over ()))::FLOAT\n    )\n    *\n    (1 - 0)\n    +\n    0\n\n as actual,\n    output as expected\nfrom data_min_max_scale", "relation_name": "\"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_min_max_scale\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:21.879283Z", "completed_at": "2024-08-19T03:36:21.905867Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:21.906682Z", "completed_at": "2024-08-19T03:36:21.906696Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02956080436706543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ml_inline_preprocessing_integration_tests.test_numerical_binarize", "compiled": true, "compiled_code": "with data_numerical_binarize as (\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_raw_data\".\"data_numerical_binarize\"\n)\n\nselect\n    \n\n    \n\n    \n\n    case\n        when input >=\n            \n                5\n            \n            then 1\n        else 0\n    end\n\n as actual_value,\n    \n\n    \n\n    \n        \n\n        \n    \n\n    case\n        when input >\n            \n                3.8\n            \n            then 1\n        else 0\n    end\n\n as actual_percentile,\n    output_value as expected_value,\n    output_percentile as expected_percentile\nfrom data_numerical_binarize", "relation_name": "\"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_numerical_binarize\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:21.910474Z", "completed_at": "2024-08-19T03:36:21.935724Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:21.936284Z", "completed_at": "2024-08-19T03:36:21.936295Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02769017219543457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ml_inline_preprocessing_integration_tests.test_numerical_impute", "compiled": true, "compiled_code": "with data_numerical_impute as (\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_raw_data\".\"data_numerical_impute\"\n)\n\nselect\n    \n\n    \n\n    \n\n    \n        coalesce(input, avg(input) OVER ())\n    \n\n as actual_mean,\n    \n\n    \n\n    \n        \n\n        \n    \n\n    \n        coalesce(input, 3.0)\n    \n\n as actual_median,\n    output_mean as expected_mean,\n    output_median as expected_median\nfrom data_numerical_impute", "relation_name": "\"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_numerical_impute\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:21.939574Z", "completed_at": "2024-08-19T03:36:21.985919Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:21.986744Z", "completed_at": "2024-08-19T03:36:21.986758Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0499110221862793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ml_inline_preprocessing_integration_tests.test_one_hot_encode", "compiled": true, "compiled_code": "with data_one_hot_encode as (\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_raw_data\".\"data_one_hot_encode\"\n)\n\nselect\n    \n\n    \n    \n\n    \n\n        case\n            when input = 'cat' then 1\n            else 0\n        end as is_input__cat,\n\n    \n\n        case\n            when input = 'dog' then 1\n            else 0\n        end as is_input__dog,\n\n    \n\n    case\n        when input = '' or input is null then 1\n        else 0\n    end as is_input__\n\n,\n    output_is_input__cat as expected_is_input__cat,\n    output_is_input__dog as expected_is_input__dog,\n    output_is_input__ as expected_is_input__\nfrom data_one_hot_encode", "relation_name": "\"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_one_hot_encode\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:21.991202Z", "completed_at": "2024-08-19T03:36:22.026205Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:22.026757Z", "completed_at": "2024-08-19T03:36:22.026768Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.038516998291015625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ml_inline_preprocessing_integration_tests.test_random_impute_cat", "compiled": true, "compiled_code": "with data_random_impute_cat as (\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_raw_data\".\"data_random_impute_cat\"\n)\n\nselect\n    \n\n    \n        \n        \n\n        \n        \n\n        \n    \n\n    \n    case\n        \n        \n        \n            \n            when input is null\n                and mod((row_number() over ()) + 92, 3) = 0\n                    then  'bear' \n        \n            \n            when input is null\n                and mod((row_number() over ()) + 92, 3) = 1\n                    then  'cat' \n        \n            \n            when input is null\n                and mod((row_number() over ()) + 92, 3) = 2\n                    then  'dog' \n        \n        else input\n    end\n\n as actual\nfrom data_random_impute_cat", "relation_name": "\"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_random_impute_cat\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:22.031436Z", "completed_at": "2024-08-19T03:36:22.056905Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:22.057525Z", "completed_at": "2024-08-19T03:36:22.057538Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02792978286743164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ml_inline_preprocessing_integration_tests.test_random_impute_num", "compiled": true, "compiled_code": "with data_random_impute_num as (\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_raw_data\".\"data_random_impute_num\"\n)\n\nselect\n    \n\n    \n        \n        \n        \n\n            \n    \n\n    \n    case\n        \n        \n        \n            \n            when input is null\n                and mod((row_number() over ()) + 81, 10) = 0\n                    then  0 \n        \n            \n            when input is null\n                and mod((row_number() over ()) + 81, 10) = 1\n                    then  1 \n        \n            \n            when input is null\n                and mod((row_number() over ()) + 81, 10) = 2\n                    then  1 \n        \n            \n            when input is null\n                and mod((row_number() over ()) + 81, 10) = 3\n                    then  4 \n        \n            \n            when input is null\n                and mod((row_number() over ()) + 81, 10) = 4\n                    then  5 \n        \n            \n            when input is null\n                and mod((row_number() over ()) + 81, 10) = 5\n                    then  6 \n        \n            \n            when input is null\n                and mod((row_number() over ()) + 81, 10) = 6\n                    then  1 \n        \n            \n            when input is null\n                and mod((row_number() over ()) + 81, 10) = 7\n                    then  2 \n        \n            \n            when input is null\n                and mod((row_number() over ()) + 81, 10) = 8\n                    then  3 \n        \n            \n            when input is null\n                and mod((row_number() over ()) + 81, 10) = 9\n                    then  4 \n        \n        else input\n    end\n\n as actual\nfrom data_random_impute_num", "relation_name": "\"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_random_impute_num\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:22.060838Z", "completed_at": "2024-08-19T03:36:22.069321Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:22.070186Z", "completed_at": "2024-08-19T03:36:22.070198Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010642051696777344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ml_inline_preprocessing_integration_tests.test_rare_category_encode", "compiled": true, "compiled_code": "with data_rare_category_encode as (\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_raw_data\".\"data_rare_category_encode\"\n)\n\nselect\n    \n\n    case\n        when input is null then null\n        when (COUNT(*) over (partition by input) / (COUNT(*) over ())::FLOAT) < 0.2 then 'Other'\n        else input\n    end\n\n as actual_20,\n    output_20 as expected_20\nfrom data_rare_category_encode", "relation_name": "\"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_rare_category_encode\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:22.073000Z", "completed_at": "2024-08-19T03:36:22.107812Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:22.108637Z", "completed_at": "2024-08-19T03:36:22.108649Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.037477970123291016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ml_inline_preprocessing_integration_tests.test_robust_scale", "compiled": true, "compiled_code": "with data_robust_scale as (\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_raw_data\".\"data_robust_scale\"\n)\n\nselect\n    \n\n    \n\n    \n    \n    \n\n    \n    \n    \n\n    (\n        input - 5.0\n    )\n    /\n    (\n        7.5 - 2.5\n    )\n\n as actual,\n    output::FLOAT as expected\nfrom data_robust_scale", "relation_name": "\"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_robust_scale\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:22.112156Z", "completed_at": "2024-08-19T03:36:22.120880Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:22.121718Z", "completed_at": "2024-08-19T03:36:22.121731Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011045217514038086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ml_inline_preprocessing_integration_tests.test_standardize", "compiled": true, "compiled_code": "with data_standardize as (\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_raw_data\".\"data_standardize\"\n)\n\nselect\n    \n\n    \n    (\n        (input - avg(input) over ())\n        /\n        (stddev(input) over ())::FLOAT\n    )\n    *\n    1\n    +\n    0\n\n as actual,\n    output::FLOAT as expected\nfrom data_standardize", "relation_name": "\"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_standardize\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:22.124632Z", "completed_at": "2024-08-19T03:36:22.139324Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:22.140058Z", "completed_at": "2024-08-19T03:36:22.140070Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01672506332397461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_categorical_impute_actual__expected.9901f12ddf", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_categorical_impute\" where actual != expected\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:22.142891Z", "completed_at": "2024-08-19T03:36:22.150017Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:22.150670Z", "completed_at": "2024-08-19T03:36:22.150685Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009109973907470703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_interact_actual_add__expected_add.5fa55c23dc", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_interact\" where actual_add != expected_add\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:22.153454Z", "completed_at": "2024-08-19T03:36:22.160059Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:22.160821Z", "completed_at": "2024-08-19T03:36:22.160833Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00856781005859375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_interact_actual_exp__expected_exp.3f034bb650", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_interact\" where actual_exp != expected_exp\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:22.163852Z", "completed_at": "2024-08-19T03:36:22.170201Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:22.170756Z", "completed_at": "2024-08-19T03:36:22.170768Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008266925811767578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_interact_actual_mult__expected_mult.cba62a8855", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_interact\" where actual_mult != expected_mult\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:22.173592Z", "completed_at": "2024-08-19T03:36:22.185913Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:22.186928Z", "completed_at": "2024-08-19T03:36:22.186947Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014629125595092773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_k_bins_discretize_actual_quantile__expected_quantile.416bc91c6d", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_k_bins_discretize\" where actual_quantile != expected_quantile\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:22.191663Z", "completed_at": "2024-08-19T03:36:22.201364Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:22.202030Z", "completed_at": "2024-08-19T03:36:22.202043Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012379169464111328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_k_bins_discretize_actual_uniform__expected_uniform.ba87509ab4", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_k_bins_discretize\" where actual_uniform != expected_uniform\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:22.205411Z", "completed_at": "2024-08-19T03:36:22.213201Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:22.213922Z", "completed_at": "2024-08-19T03:36:22.213936Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01040792465209961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_label_encode_actual__expected.69148fa2aa", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_label_encode\" where actual != expected\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:22.216937Z", "completed_at": "2024-08-19T03:36:22.222395Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:22.223136Z", "completed_at": "2024-08-19T03:36:22.223148Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007471799850463867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_log_transform_actual__expected.720df44f4c", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_log_transform\" where actual != expected\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:22.226161Z", "completed_at": "2024-08-19T03:36:22.234495Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:22.235722Z", "completed_at": "2024-08-19T03:36:22.235741Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011160135269165039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_max_absolute_scale_actual__expected.98898a3cc8", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_max_absolute_scale\" where actual != expected\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:22.241036Z", "completed_at": "2024-08-19T03:36:22.250525Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:22.251755Z", "completed_at": "2024-08-19T03:36:22.251775Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013223886489868164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_min_max_scale_actual__expected.79a62fda50", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_min_max_scale\" where actual != expected\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:22.256727Z", "completed_at": "2024-08-19T03:36:22.269584Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:22.270517Z", "completed_at": "2024-08-19T03:36:22.270534Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.016208887100219727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_numerical_binarize_actual_percentile__expected_percentile.0fe173f1bd", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_numerical_binarize\" where actual_percentile != expected_percentile\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:22.274982Z", "completed_at": "2024-08-19T03:36:22.286612Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:22.287518Z", "completed_at": "2024-08-19T03:36:22.287535Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014554023742675781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_numerical_binarize_actual_value__expected_value.e059fdcee8", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_numerical_binarize\" where actual_value != expected_value\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:22.292525Z", "completed_at": "2024-08-19T03:36:22.300990Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:22.302039Z", "completed_at": "2024-08-19T03:36:22.302059Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011836051940917969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_numerical_impute_actual_mean__expected_mean.d10aa53a90", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_numerical_impute\" where actual_mean != expected_mean\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:22.305076Z", "completed_at": "2024-08-19T03:36:22.312541Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:22.313242Z", "completed_at": "2024-08-19T03:36:22.313259Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009544134140014648, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_numerical_impute_actual_median__expected_median.a50e5fb666", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_numerical_impute\" where actual_median != expected_median\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:22.316441Z", "completed_at": "2024-08-19T03:36:22.327428Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:22.328961Z", "completed_at": "2024-08-19T03:36:22.328981Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01404118537902832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_one_hot_encode_is_input____expected_is_input__.5d7a4e6b62", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_one_hot_encode\" where is_input__ != expected_is_input__\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:22.333888Z", "completed_at": "2024-08-19T03:36:22.344803Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:22.345699Z", "completed_at": "2024-08-19T03:36:22.345715Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013952970504760742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_one_hot_encode_is_input__cat__expected_is_input__cat.945d8fe437", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_one_hot_encode\" where is_input__cat != expected_is_input__cat\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:22.349320Z", "completed_at": "2024-08-19T03:36:22.357388Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:22.358188Z", "completed_at": "2024-08-19T03:36:22.358262Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010339021682739258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_one_hot_encode_is_input__dog__expected_is_input__dog.427f58add7", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_one_hot_encode\" where is_input__dog != expected_is_input__dog\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:22.361464Z", "completed_at": "2024-08-19T03:36:22.368350Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:22.368959Z", "completed_at": "2024-08-19T03:36:22.368971Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008985042572021484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_not_null_test_random_impute_cat_actual.4485ec4b6c", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_random_impute_cat\" where actual is null\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:22.371709Z", "completed_at": "2024-08-19T03:36:22.376836Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:22.377400Z", "completed_at": "2024-08-19T03:36:22.377411Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006941318511962891, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_not_null_test_random_impute_num_actual.847cbbe928", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_random_impute_num\" where actual is null\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:22.382031Z", "completed_at": "2024-08-19T03:36:22.393516Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:22.394483Z", "completed_at": "2024-08-19T03:36:22.394501Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01469111442565918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_rare_category_encode_actual_20__expected_20.42bbb8beae", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_rare_category_encode\" where actual_20 != expected_20\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:22.398804Z", "completed_at": "2024-08-19T03:36:22.407136Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:22.408127Z", "completed_at": "2024-08-19T03:36:22.408145Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011420965194702148, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_robust_scale_actual__expected.a73d8e61cb", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_robust_scale\" where actual != expected\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-19T03:36:22.412631Z", "completed_at": "2024-08-19T03:36:22.420288Z"}, {"name": "execute", "started_at": "2024-08-19T03:36:22.420981Z", "completed_at": "2024-08-19T03:36:22.420995Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01036214828491211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_close_test_standardize_actual__expected.899cf90a6b", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_standardize\" where round(actual::numeric, 2) != round(expected::numeric, 2)\n", "relation_name": null}], "elapsed_time": 1.107327938079834, "args": {"printer_width": 80, "vars": {}, "which": "generate", "indirect_selection": "eager", "print": true, "require_explicit_package_overrides_for_builtin_materializations": true, "partial_parse": true, "populate_cache": true, "enable_legacy_logger": false, "log_level": "info", "project_dir": "/Users/matthewsenick/Github/DBT/dbt_ml_inline_preprocessing/integration_tests", "show_resource_report": false, "warn_error_options": {"include": [], "exclude": []}, "introspect": true, "profiles_dir": "/Users/matthewsenick/Github/DBT/dbt_ml_inline_preprocessing/integration_tests", "empty_catalog": false, "source_freshness_run_project_hooks": false, "version_check": true, "log_format": "default", "log_file_max_bytes": 10485760, "quiet": false, "require_resource_names_without_spaces": false, "compile": true, "cache_selected_only": false, "log_path": "/Users/matthewsenick/Github/DBT/dbt_ml_inline_preprocessing/integration_tests/logs", "use_colors": true, "write_json": true, "invocation_command": "dbt docs generate", "log_format_file": "debug", "strict_mode": false, "macro_debugging": false, "send_anonymous_usage_stats": true, "use_colors_file": true, "log_level_file": "debug", "static_parser": true, "select": [], "exclude": [], "favor_state": false, "partial_parse_file_diff": true, "static": false, "defer": false}}