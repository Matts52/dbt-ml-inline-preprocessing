{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.5", "generated_at": "2024-08-16T04:56:49.856472Z", "invocation_id": "e6e2deac-4efc-4d44-82f6-7cfc18d40177", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.053061Z", "completed_at": "2024-08-16T04:56:49.067706Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.069570Z", "completed_at": "2024-08-16T04:56:49.069622Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01789379119873047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.ml_inline_preprocessing_integration_tests.data_categorical_impute", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.073941Z", "completed_at": "2024-08-16T04:56:49.075882Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.076921Z", "completed_at": "2024-08-16T04:56:49.076936Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005023002624511719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.ml_inline_preprocessing_integration_tests.data_interact", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.080208Z", "completed_at": "2024-08-16T04:56:49.081985Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.082752Z", "completed_at": "2024-08-16T04:56:49.082763Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.003804922103881836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.ml_inline_preprocessing_integration_tests.data_k_bins_discretize", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.085434Z", "completed_at": "2024-08-16T04:56:49.087053Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.087788Z", "completed_at": "2024-08-16T04:56:49.087797Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0036389827728271484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.ml_inline_preprocessing_integration_tests.data_label_encode", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.091015Z", "completed_at": "2024-08-16T04:56:49.092565Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.093410Z", "completed_at": "2024-08-16T04:56:49.093420Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004127979278564453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.ml_inline_preprocessing_integration_tests.data_log_transform", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.096085Z", "completed_at": "2024-08-16T04:56:49.097616Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.098284Z", "completed_at": "2024-08-16T04:56:49.098293Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0033190250396728516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.ml_inline_preprocessing_integration_tests.data_max_absolute_scale", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.101369Z", "completed_at": "2024-08-16T04:56:49.103547Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.104814Z", "completed_at": "2024-08-16T04:56:49.104825Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0051310062408447266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.ml_inline_preprocessing_integration_tests.data_min_max_scale", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.107566Z", "completed_at": "2024-08-16T04:56:49.109457Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.110262Z", "completed_at": "2024-08-16T04:56:49.110272Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0038590431213378906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.ml_inline_preprocessing_integration_tests.data_numerical_binarize", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.113037Z", "completed_at": "2024-08-16T04:56:49.114667Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.115360Z", "completed_at": "2024-08-16T04:56:49.115370Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.003496885299682617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.ml_inline_preprocessing_integration_tests.data_numerical_impute", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.118096Z", "completed_at": "2024-08-16T04:56:49.119628Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.120291Z", "completed_at": "2024-08-16T04:56:49.120299Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0035779476165771484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.ml_inline_preprocessing_integration_tests.data_one_hot_encode", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.123357Z", "completed_at": "2024-08-16T04:56:49.124883Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.125730Z", "completed_at": "2024-08-16T04:56:49.125739Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0037529468536376953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.ml_inline_preprocessing_integration_tests.data_random_impute_cat", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.128277Z", "completed_at": "2024-08-16T04:56:49.129754Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.130380Z", "completed_at": "2024-08-16T04:56:49.130389Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.003161907196044922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.ml_inline_preprocessing_integration_tests.data_random_impute_num", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.132802Z", "completed_at": "2024-08-16T04:56:49.134601Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.135370Z", "completed_at": "2024-08-16T04:56:49.135379Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0036191940307617188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.ml_inline_preprocessing_integration_tests.data_rare_category_encode", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.137868Z", "completed_at": "2024-08-16T04:56:49.139379Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.140003Z", "completed_at": "2024-08-16T04:56:49.140012Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0031859874725341797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.ml_inline_preprocessing_integration_tests.data_robust_scale", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.142679Z", "completed_at": "2024-08-16T04:56:49.144181Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.144818Z", "completed_at": "2024-08-16T04:56:49.144827Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0032911300659179688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.ml_inline_preprocessing_integration_tests.data_standardize", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.147299Z", "completed_at": "2024-08-16T04:56:49.174395Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.174991Z", "completed_at": "2024-08-16T04:56:49.175036Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029422998428344727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ml_inline_preprocessing_integration_tests.test_categorical_impute", "compiled": true, "compiled_code": "with data_categorical_impute as (\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_raw_data\".\"data_categorical_impute\"\n)\n\nselect\n    \n\n    \n\n    \n\n    \n\n    \n        coalesce(input, 'cat')\n    \n\n as actual,\n    output as expected\nfrom data_categorical_impute", "relation_name": "\"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_categorical_impute\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.178584Z", "completed_at": "2024-08-16T04:56:49.189763Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.190533Z", "completed_at": "2024-08-16T04:56:49.190552Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013480901718139648, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ml_inline_preprocessing_integration_tests.test_interact", "compiled": true, "compiled_code": "with data_interact as (\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_raw_data\".\"data_interact\"\n)\n\nselect\n    \n\n    \n        (input_one * input_two)\n    \n\n as actual_mult,\n    \n\n    \n        (input_one + input_two)\n    \n\n as actual_add,\n    \n\n    \n        POW(input_one, input_two)\n    \n\n as actual_exp,\n    output_mult as expected_mult,\n    output_add as expected_add,\n    output_exp as expected_exp\nfrom data_interact", "relation_name": "\"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_interact\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.194171Z", "completed_at": "2024-08-16T04:56:49.204433Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.204968Z", "completed_at": "2024-08-16T04:56:49.204979Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012481689453125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ml_inline_preprocessing_integration_tests.test_k_bins_discretize", "compiled": true, "compiled_code": "with data_k_bins_discretize as (\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_raw_data\".\"data_k_bins_discretize\"\n)\n\nselect\n    \n\n    \n        NTILE(5) over (order by input)\n    \n\n as actual_quantile,\n    \n\n    \n        \n        floor(\n        (\n            input - (min(input) over ())\n        )\n        /\n        (\n            ((max(input) over ()) - (min(input) over ())) / 4::float\n        )\n        ) + 1\n    \n\n as actual_uniform,\n    output_quantile as expected_quantile,\n    output_uniform as expected_uniform\nfrom data_k_bins_discretize", "relation_name": "\"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_k_bins_discretize\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.207690Z", "completed_at": "2024-08-16T04:56:49.213798Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.214348Z", "completed_at": "2024-08-16T04:56:49.214358Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007816791534423828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ml_inline_preprocessing_integration_tests.test_label_encode", "compiled": true, "compiled_code": "with data_label_encode as (\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_raw_data\".\"data_label_encode\"\n)\n\nselect\n    input,\n    \n\n    dense_rank() over (order by input) - 1\n\n as actual,\n    output as expected\nfrom data_label_encode", "relation_name": "\"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_label_encode\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.217136Z", "completed_at": "2024-08-16T04:56:49.224280Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.224804Z", "completed_at": "2024-08-16T04:56:49.224815Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00886392593383789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ml_inline_preprocessing_integration_tests.test_log_transform", "compiled": true, "compiled_code": "with data_log_transform as (\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_raw_data\".\"data_log_transform\"\n)\n\nselect\n    \n\n    case\n        when input is null or input + 0 <= 0 then null\n        else log(10, input + 0)\n    end\n\n as actual,\n    output as expected\nfrom data_log_transform", "relation_name": "\"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_log_transform\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.227294Z", "completed_at": "2024-08-16T04:56:49.234405Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.235005Z", "completed_at": "2024-08-16T04:56:49.235017Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008792877197265625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ml_inline_preprocessing_integration_tests.test_max_absolute_scale", "compiled": true, "compiled_code": "with data_max_absolute_scale as (\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_raw_data\".\"data_max_absolute_scale\"\n)\n\nselect\n    \n\n    (input) / (max(abs(input)) over ())::FLOAT\n\n as actual,\n    output as expected\nfrom data_max_absolute_scale", "relation_name": "\"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_max_absolute_scale\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.237992Z", "completed_at": "2024-08-16T04:56:49.245437Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.246355Z", "completed_at": "2024-08-16T04:56:49.246374Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009742021560668945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ml_inline_preprocessing_integration_tests.test_min_max_scale", "compiled": true, "compiled_code": "with data_min_max_scale as (\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_raw_data\".\"data_min_max_scale\"\n)\n\nselect\n    \n\n    \n    (\n        ((input) - (min(input) over ()))\n        /\n        ((max(input) over ()) - (min(input) over ()))::FLOAT\n    )\n    *\n    (1 - 0)\n    +\n    0\n\n as actual,\n    output as expected\nfrom data_min_max_scale", "relation_name": "\"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_min_max_scale\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.249364Z", "completed_at": "2024-08-16T04:56:49.274931Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.275740Z", "completed_at": "2024-08-16T04:56:49.275755Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028218746185302734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ml_inline_preprocessing_integration_tests.test_numerical_binarize", "compiled": true, "compiled_code": "with data_numerical_binarize as (\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_raw_data\".\"data_numerical_binarize\"\n)\n\nselect\n    \n\n    \n\n    \n\n    case\n        when input >=\n            \n                5\n            \n            then 1\n        else 0\n    end\n\n as actual_value,\n    \n\n    \n\n    \n        \n\n        \n    \n\n    case\n        when input >\n            \n                3.8\n            \n            then 1\n        else 0\n    end\n\n as actual_percentile,\n    output_value as expected_value,\n    output_percentile as expected_percentile\nfrom data_numerical_binarize", "relation_name": "\"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_numerical_binarize\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.279235Z", "completed_at": "2024-08-16T04:56:49.322268Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.323673Z", "completed_at": "2024-08-16T04:56:49.323694Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.046840667724609375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ml_inline_preprocessing_integration_tests.test_numerical_impute", "compiled": true, "compiled_code": "with data_numerical_impute as (\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_raw_data\".\"data_numerical_impute\"\n)\n\nselect\n    \n\n    \n\n    \n\n    \n        coalesce(input, avg(input) OVER ())\n    \n\n as actual_mean,\n    \n\n    \n\n    \n        \n\n        \n    \n\n    \n        coalesce(input, 3.0)\n    \n\n as actual_median,\n    output_mean as expected_mean,\n    output_median as expected_median\nfrom data_numerical_impute", "relation_name": "\"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_numerical_impute\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.328663Z", "completed_at": "2024-08-16T04:56:49.378971Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.379520Z", "completed_at": "2024-08-16T04:56:49.379532Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.053652048110961914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ml_inline_preprocessing_integration_tests.test_one_hot_encode", "compiled": true, "compiled_code": "with data_one_hot_encode as (\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_raw_data\".\"data_one_hot_encode\"\n)\n\nselect\n    \n\n    \n    \n\n    \n\n        case\n            when input = 'cat' then 1\n            else 0\n        end as is_input__cat,\n\n    \n\n        case\n            when input = 'dog' then 1\n            else 0\n        end as is_input__dog,\n\n    \n\n    case\n        when input = '' or input is null then 1\n        else 0\n    end as is_input__\n\n,\n    output_is_input__cat as expected_is_input__cat,\n    output_is_input__dog as expected_is_input__dog,\n    output_is_input__ as expected_is_input__\nfrom data_one_hot_encode", "relation_name": "\"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_one_hot_encode\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.384005Z", "completed_at": "2024-08-16T04:56:49.435067Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.435667Z", "completed_at": "2024-08-16T04:56:49.435680Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.05463910102844238, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ml_inline_preprocessing_integration_tests.test_random_impute_cat", "compiled": true, "compiled_code": "with data_random_impute_cat as (\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_raw_data\".\"data_random_impute_cat\"\n)\n\nselect\n    \n\n    \n        \n        \n\n        \n        \n\n        \n    \n\n    \n    case\n        \n        \n        \n            \n            when input is null\n                and mod((row_number() over ()) + 63, 3) = 0\n                    then  'bear' \n        \n            \n            when input is null\n                and mod((row_number() over ()) + 63, 3) = 1\n                    then  'cat' \n        \n            \n            when input is null\n                and mod((row_number() over ()) + 63, 3) = 2\n                    then  'dog' \n        \n        else input\n    end\n\n as actual\nfrom data_random_impute_cat", "relation_name": "\"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_random_impute_cat\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.440532Z", "completed_at": "2024-08-16T04:56:49.481961Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.482568Z", "completed_at": "2024-08-16T04:56:49.482580Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.044159889221191406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ml_inline_preprocessing_integration_tests.test_random_impute_num", "compiled": true, "compiled_code": "with data_random_impute_num as (\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_raw_data\".\"data_random_impute_num\"\n)\n\nselect\n    \n\n    \n        \n        \n        \n\n            \n    \n\n    \n    case\n        \n        \n        \n            \n            when input is null\n                and mod((row_number() over ()) + 53, 10) = 0\n                    then  0 \n        \n            \n            when input is null\n                and mod((row_number() over ()) + 53, 10) = 1\n                    then  1 \n        \n            \n            when input is null\n                and mod((row_number() over ()) + 53, 10) = 2\n                    then  1 \n        \n            \n            when input is null\n                and mod((row_number() over ()) + 53, 10) = 3\n                    then  4 \n        \n            \n            when input is null\n                and mod((row_number() over ()) + 53, 10) = 4\n                    then  5 \n        \n            \n            when input is null\n                and mod((row_number() over ()) + 53, 10) = 5\n                    then  6 \n        \n            \n            when input is null\n                and mod((row_number() over ()) + 53, 10) = 6\n                    then  1 \n        \n            \n            when input is null\n                and mod((row_number() over ()) + 53, 10) = 7\n                    then  2 \n        \n            \n            when input is null\n                and mod((row_number() over ()) + 53, 10) = 8\n                    then  3 \n        \n            \n            when input is null\n                and mod((row_number() over ()) + 53, 10) = 9\n                    then  4 \n        \n        else input\n    end\n\n as actual\nfrom data_random_impute_num", "relation_name": "\"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_random_impute_num\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.486392Z", "completed_at": "2024-08-16T04:56:49.494181Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.494966Z", "completed_at": "2024-08-16T04:56:49.494978Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010165929794311523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ml_inline_preprocessing_integration_tests.test_rare_category_encode", "compiled": true, "compiled_code": "with data_rare_category_encode as (\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_raw_data\".\"data_rare_category_encode\"\n)\n\nselect\n    \n\n    case\n        when input is null then null\n        when (COUNT(*) over (partition by input) / (COUNT(*) over ())::FLOAT) < 0.2 then 'Other'\n        else input\n    end\n\n as actual_20,\n    output_20 as expected_20\nfrom data_rare_category_encode", "relation_name": "\"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_rare_category_encode\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.498010Z", "completed_at": "2024-08-16T04:56:49.531308Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.531936Z", "completed_at": "2024-08-16T04:56:49.531948Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03592538833618164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ml_inline_preprocessing_integration_tests.test_robust_scale", "compiled": true, "compiled_code": "with data_robust_scale as (\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_raw_data\".\"data_robust_scale\"\n)\n\nselect\n    \n\n    \n\n    \n    \n    \n\n    \n    \n    \n\n    (\n        input - 5.0\n    )\n    /\n    (\n        7.5 - 2.5\n    )\n\n as actual,\n    output::FLOAT as expected\nfrom data_robust_scale", "relation_name": "\"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_robust_scale\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.535508Z", "completed_at": "2024-08-16T04:56:49.547740Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.548699Z", "completed_at": "2024-08-16T04:56:49.548718Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014684200286865234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ml_inline_preprocessing_integration_tests.test_standardize", "compiled": true, "compiled_code": "with data_standardize as (\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_raw_data\".\"data_standardize\"\n)\n\nselect\n    \n\n    \n    (\n        (input - avg(input) over ())\n        /\n        (stddev(input) over ())::FLOAT\n    )\n    *\n    1\n    +\n    0\n\n as actual,\n    output::FLOAT as expected\nfrom data_standardize", "relation_name": "\"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_standardize\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.552970Z", "completed_at": "2024-08-16T04:56:49.572079Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.573210Z", "completed_at": "2024-08-16T04:56:49.573255Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.021769046783447266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_categorical_impute_actual__expected.9901f12ddf", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_categorical_impute\" where actual != expected\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.576670Z", "completed_at": "2024-08-16T04:56:49.583776Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.584370Z", "completed_at": "2024-08-16T04:56:49.584382Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009057760238647461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_interact_actual_add__expected_add.5fa55c23dc", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_interact\" where actual_add != expected_add\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.586977Z", "completed_at": "2024-08-16T04:56:49.598957Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.599908Z", "completed_at": "2024-08-16T04:56:49.599925Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014214277267456055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_interact_actual_exp__expected_exp.3f034bb650", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_interact\" where actual_exp != expected_exp\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.603267Z", "completed_at": "2024-08-16T04:56:49.611964Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.612631Z", "completed_at": "2024-08-16T04:56:49.612644Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010667085647583008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_interact_actual_mult__expected_mult.cba62a8855", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_interact\" where actual_mult != expected_mult\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.616722Z", "completed_at": "2024-08-16T04:56:49.625526Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.626198Z", "completed_at": "2024-08-16T04:56:49.626211Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011488676071166992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_k_bins_discretize_actual_quantile__expected_quantile.416bc91c6d", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_k_bins_discretize\" where actual_quantile != expected_quantile\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.629252Z", "completed_at": "2024-08-16T04:56:49.639776Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.640626Z", "completed_at": "2024-08-16T04:56:49.640644Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012801170349121094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_k_bins_discretize_actual_uniform__expected_uniform.ba87509ab4", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_k_bins_discretize\" where actual_uniform != expected_uniform\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.644843Z", "completed_at": "2024-08-16T04:56:49.652982Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.653697Z", "completed_at": "2024-08-16T04:56:49.653708Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010782957077026367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_label_encode_actual__expected.69148fa2aa", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_label_encode\" where actual != expected\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.656245Z", "completed_at": "2024-08-16T04:56:49.660871Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.661383Z", "completed_at": "2024-08-16T04:56:49.661392Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006234169006347656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_log_transform_actual__expected.720df44f4c", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_log_transform\" where actual != expected\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.663736Z", "completed_at": "2024-08-16T04:56:49.668976Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.669679Z", "completed_at": "2024-08-16T04:56:49.669690Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0070230960845947266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_max_absolute_scale_actual__expected.98898a3cc8", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_max_absolute_scale\" where actual != expected\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.672148Z", "completed_at": "2024-08-16T04:56:49.678707Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.679436Z", "completed_at": "2024-08-16T04:56:49.679447Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008372783660888672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_min_max_scale_actual__expected.79a62fda50", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_min_max_scale\" where actual != expected\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.682130Z", "completed_at": "2024-08-16T04:56:49.689391Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.690373Z", "completed_at": "2024-08-16T04:56:49.690391Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009530067443847656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_numerical_binarize_actual_percentile__expected_percentile.0fe173f1bd", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_numerical_binarize\" where actual_percentile != expected_percentile\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.696421Z", "completed_at": "2024-08-16T04:56:49.709489Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.710369Z", "completed_at": "2024-08-16T04:56:49.710386Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.017146825790405273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_numerical_binarize_actual_value__expected_value.e059fdcee8", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_numerical_binarize\" where actual_value != expected_value\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.714891Z", "completed_at": "2024-08-16T04:56:49.726162Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.726777Z", "completed_at": "2024-08-16T04:56:49.726789Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013885021209716797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_numerical_impute_actual_mean__expected_mean.d10aa53a90", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_numerical_impute\" where actual_mean != expected_mean\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.729448Z", "completed_at": "2024-08-16T04:56:49.736590Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.737218Z", "completed_at": "2024-08-16T04:56:49.737229Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009006738662719727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_numerical_impute_actual_median__expected_median.a50e5fb666", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_numerical_impute\" where actual_median != expected_median\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.740477Z", "completed_at": "2024-08-16T04:56:49.753466Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.754439Z", "completed_at": "2024-08-16T04:56:49.754456Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015839099884033203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_one_hot_encode_is_input____expected_is_input__.5d7a4e6b62", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_one_hot_encode\" where is_input__ != expected_is_input__\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.758816Z", "completed_at": "2024-08-16T04:56:49.770990Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.771990Z", "completed_at": "2024-08-16T04:56:49.772008Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015243053436279297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_one_hot_encode_is_input__cat__expected_is_input__cat.945d8fe437", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_one_hot_encode\" where is_input__cat != expected_is_input__cat\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.776524Z", "completed_at": "2024-08-16T04:56:49.786901Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.787563Z", "completed_at": "2024-08-16T04:56:49.787575Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012953042984008789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_one_hot_encode_is_input__dog__expected_is_input__dog.427f58add7", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_one_hot_encode\" where is_input__dog != expected_is_input__dog\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.790916Z", "completed_at": "2024-08-16T04:56:49.802112Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.803022Z", "completed_at": "2024-08-16T04:56:49.803041Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01411581039428711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_not_null_test_random_impute_cat_actual.4485ec4b6c", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_random_impute_cat\" where actual is null\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.806903Z", "completed_at": "2024-08-16T04:56:49.812436Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.813198Z", "completed_at": "2024-08-16T04:56:49.813217Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007729053497314453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_not_null_test_random_impute_num_actual.847cbbe928", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_random_impute_num\" where actual is null\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.816364Z", "completed_at": "2024-08-16T04:56:49.825484Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.826202Z", "completed_at": "2024-08-16T04:56:49.826214Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011180877685546875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_rare_category_encode_actual_20__expected_20.42bbb8beae", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_rare_category_encode\" where actual_20 != expected_20\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.829242Z", "completed_at": "2024-08-16T04:56:49.834741Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.835335Z", "completed_at": "2024-08-16T04:56:49.835346Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0075228214263916016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_equal_test_robust_scale_actual__expected.a73d8e61cb", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_robust_scale\" where actual != expected\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T04:56:49.838501Z", "completed_at": "2024-08-16T04:56:49.851209Z"}, {"name": "execute", "started_at": "2024-08-16T04:56:49.852197Z", "completed_at": "2024-08-16T04:56:49.852213Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01532602310180664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ml_inline_preprocessing_integration_tests.assert_close_test_standardize_actual__expected.899cf90a6b", "compiled": true, "compiled_code": "\n    select * from \"test_database\".\"ml_inline_preprocessing_integration_tests_postgres_model_output\".\"test_standardize\" where round(actual::numeric, 2) != round(expected::numeric, 2)\n", "relation_name": null}], "elapsed_time": 1.0144579410552979, "args": {"require_resource_names_without_spaces": false, "compile": true, "log_level_file": "debug", "source_freshness_run_project_hooks": false, "select": [], "require_explicit_package_overrides_for_builtin_materializations": true, "use_colors": true, "vars": {}, "profiles_dir": "/Users/matthewsenick/Github/DBT/dbt_ml_inline_preprocessing/integration_tests", "show_resource_report": false, "printer_width": 80, "log_file_max_bytes": 10485760, "project_dir": "/Users/matthewsenick/Github/DBT/dbt_ml_inline_preprocessing/integration_tests", "quiet": false, "log_format_file": "debug", "macro_debugging": false, "introspect": true, "invocation_command": "dbt docs generate", "log_format": "default", "enable_legacy_logger": false, "write_json": true, "cache_selected_only": false, "strict_mode": false, "warn_error_options": {"include": [], "exclude": []}, "print": true, "partial_parse": true, "populate_cache": true, "version_check": true, "exclude": [], "use_colors_file": true, "partial_parse_file_diff": true, "static": false, "log_path": "/Users/matthewsenick/Github/DBT/dbt_ml_inline_preprocessing/integration_tests/logs", "send_anonymous_usage_stats": true, "which": "generate", "empty_catalog": false, "favor_state": false, "indirect_selection": "eager", "log_level": "info", "defer": false, "static_parser": true}}